@mixin createHoverState() {
  @media (hover) {
    &:active,
    &:hover {
      &:not(:disabled) {
        @content;
      }
    }
  }
}

.base-link {
  --animationTime: 0.4s;

  display: inline-flex;
  align-items: center;
  flex-direction: row;
  gap: var(--spacing-30, 0);
  padding: var(--spacing-20, 0);

  background-color: transparent;
  border: none;
  border-radius: var(--radius-200, 0);
  color: var(--color-primary-20, #000);
  outline: none;

  &:is(a) {
    &[href] {
      cursor: pointer;
    }
  }

  &:is(button) {
    cursor: pointer;
  }

  transition:
    background var(--animationTime, 0s) ease-out,
    box-shadow var(--animationTime, 0s) ease-out,
    border-color var(--animationTime, 0s) ease-out,
    color var(--animationTime, 0s) ease-out;

  // disable
  &[disabled] {
    pointer-events: none;

    &:not([class*='ALT']) {
      color: var(--color-neutral-60, #000);
    }
    
    color: var(--color-neutral-40, #000);
  }

  @media (hover) {
    &:focus-visible {
      box-shadow:
        0 0 0 2px var(--color-neutral-10, #000),
        0 0 0 4px var(--color-outline, #000);

      &[class*='ALT'] {
        box-shadow:
          0 0 0 2px var(--color-outline, #000),
          0 0 0 4px var(--color-neutral-10, #000);
      }
    }
  }

  &--is {
    // colors
    &-primary {
      color: var(--color-primary-40, #000);
      @include createHoverState {
        &:not([class*='ALT']) {
          color: var(--color-primary-50, #000);
        }
        color: var(--color-primary-30, #000);
      }
      &-ALT {
        color: var(--color-primary-20, #000);
      }
    }

    // sizing
    &-M {
      @include text-link-m--regular;
    }
    &-S {
      @include text-link-s--regular;
    }
  }
}
