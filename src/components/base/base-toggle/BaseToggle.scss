.base-toggle {
    $basetoggle: &;
    --animationTime: 0.4s;

    @include text-body-m--regular;
    align-items: center;
    display: inline-flex;
    gap: var(--spacing-30, 0);

    color: var(--color-neutral-70, #000);

    &:not(:has(input:disabled)) {
        cursor: pointer;

        @media (hover) {
            &:hover {
                &:not(#{$basetoggle}--is-ALT) {
                    #{$basetoggle}__switch {
                        box-shadow: var(--shadow-100);
                    }
                }

                #{$basetoggle}__switch {
                    box-shadow: var(--shadow-alt-100);
                }
            }
        }

        &:focus-within {
            &:not(#{$basetoggle}--is-ALT) {
                #{$basetoggle}__switch {
                    box-shadow:
                        0 0 0 2px var(--color-neutral-10, #000),
                        0 0 0 4px var(--color-outline, #000);
                }
            }

            #{$basetoggle}__switch {
                box-shadow:
                    0 0 0 2px var(--color-outline, #000),
                    0 0 0 4px var(--color-neutral-10, #000);
            }
        }
    }

    &:has(input:disabled) {
        &:not(#{$basetoggle}--is-ALT) {
            #{$basetoggle}__switch {
                &::before {
                    background: var(--color-neutral-60, #000);
                }
            }
        }

        #{$basetoggle}__switch {
            &::before {
                background: var(--color-neutral-70, #000);
            }
        }
    }

    &:has(input:checked) {
        &:not(:has(input:disabled)) {
            #{$basetoggle}__switch {
                background: var(--color-success-30, #000);
            }
        }

        #{$basetoggle}__switch {
            &::before {
                transform: translateX(100%);
            }
        }
    }

    &--is {
        &-S {
            @include text-body-s--regular;
        }

        &-ALT {
            color: var(--color-neutral-10, #000);

            &:has(input:disabled) {
                color: var(--color-neutral-40, #000);
            }
        }
        &-full-width {
            width: 100%;
            justify-content: space-between;
        }
    }

    &__switch {
        display: flex;
        padding: var(--spacing-10, 0);
        pointer-events: none;
        min-width: calc(var(--spacing-80, 0) + var(--spacing-20, 0));

        border: none;
        border-radius: var(--radius-400, 0);
        background: var(--color-neutral-50, #000);
        transition:
            background var(--animationTime, 0s) ease-out,
            box-shadow var(--animationTime, 0s) ease-out;

        #{$basetoggle}--is-S & {
            min-width: calc(var(--spacing-70, 0) + var(--spacing-20, 0));

            &::before {
                width: var(--spacing-50, 0);
            }
        }

        &::before {
            content: "";
            width: calc(var(--spacing-50, 0) + var(--spacing-20, 0));
            aspect-ratio: 1/1;
            border-radius: var(--radius-600, 0);
            background: var(--color-neutral-10, #000);

            transition: transform var(--animationTime, 0s) ease-out;
        }
    }
}
